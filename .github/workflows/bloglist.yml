name: Bloglist Deployment Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches: [main]
    types: [opened, synchronize]

env:
  DEPLOY_CONDITION: ${{ github.event_name == 'push' && !contains(join(toJson(github.event.commits.*.message), ' '), '#skip-deploy') }}
  CI_CONDITION: ${{ github.event_name == 'push' && !contains(join(toJson(github.event.commits.*.message), ' '), '#skip-ci') }}

jobs:
  debug:
    name: Debug
    runs-on: ubuntu-22.04
    steps:
      - name: Show Environment Variables
        run: |
          echo "VARS: ${{ toJSON(vars) }}"
          echo "GITHUB: ${{ toJSON(github) }}"
          echo "--- All Environment Variables ---"
          env | sort
  
  test_build_deploy:
    name: Test + Build + Deploy
    if: ${{ vars.CI_CONDITION == 'true' }}
    runs-on: ubuntu-22.04
    env:
      TEST_MONGODB_USER: ${{ secrets.TEST_MONGODB_USER }}
      TEST_MONGODB_PASSWORD: ${{ secrets.TEST_MONGODB_PASSWORD }}
      TEST_MONGODB_CLUSTER: ${{ secrets.TEST_MONGODB_CLUSTER }}
      TEST_MONGODB_DATABASE: ${{ secrets.TEST_MONGODB_DATABASE }}
      TEST_MONGODB_APPNAME: ${{ secrets.TEST_MONGODB_APPNAME }}
      TEST_MONGODB_BLOGS_COLLECTION: ${{ secrets.TEST_MONGODB_BLOGS_COLLECTION }}
      TEST_MONGODB_BLOGS_MODEL: ${{ secrets.TEST_MONGODB_BLOGS_MODEL }}
      TEST_MONGODB_USERS_COLLECTION: ${{ secrets.TEST_MONGODB_USERS_COLLECTION }}
      TEST_MONGODB_USERS_MODEL: ${{ secrets.TEST_MONGODB_USERS_MODEL }}
      TEST_SERVER_PORT: ${{ secrets.TEST_SERVER_PORT }}
      TEST_SERVER_SECRET: ${{ secrets.TEST_SERVER_SECRET }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Dependencies (Frontend)
        working-directory: part5/bloglist-frontend
        run: npm install && npx playwright install --with-deps 
      - name: Lint (Frontend)
        working-directory: part5/bloglist-frontend
        run: npm run lint
      - name: Test (Frontend)
        working-directory: part5/bloglist-frontend
        run: npm run test

      - name: Install Dependencies (Backend)
        working-directory: part4/bloglist-backend
        run: npm install
      - name: Lint (Backend)
        working-directory: part4/bloglist-backend
        run: npm run lint
      - name: Test (Backend)
        working-directory: part4/bloglist-backend
        run: npm run test:all

      - name: Integration Test (E2E)
        run: |
          cd part4/bloglist-backend
          npm run start:test &
          cd ../../part5/bloglist-frontend
          npm run test:e2e
      - name: Upload Playwright Report
        uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: part5/bloglist-frontend/playwright-report/
          retention-days: 30
        
      - name: Build Frontend
        working-directory: part5/bloglist-frontend
        run: npm run build
      - name: Copy Frontend Build to Backend
        working-directory: part4/bloglist-backend
        run: |
          mkdir -p dist
          cp -r ../../part5/bloglist-frontend/dist/* dist
          ls -la dist

      - name: Setup Fly.io
        uses: superfly/flyctl-actions/setup-flyctl@master
        if: ${{ env.DEPLOY_CONDITION == 'true' }}
      - name: Deploy to Fly.io
        if: ${{ env.DEPLOY_CONDITION == 'true' }}
        working-directory: part4/bloglist-backend
        run: flyctl deploy --remote-only
        env:
          FLY_API_TOKEN: ${{ secrets.BLOGLIST_FLY_API_TOKEN }}

  tag_release:
    name: Bump Version + Tag Release
    needs: [test_build_deploy]
    if: ${{ github.event_name == 'push' && !contains(join(toJson(github.event.commits.*.message), ' '), '#skip-ci') && !contains(join(toJson(github.event.commits.*.message), ' '), '#skip-deploy') }}
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.merge_commit_sha }}
          fetch-depth: '0'
      - name: Bump Version and Push Tag
        uses: anothrNick/github-tag-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
          DEFAULT_BUMP: patch
        
  notify_discord:
    name: Discord Notification
    needs: [test_build_deploy, tag_release]
    if: ${{ always() && github.event_name == 'push' && !contains(join(toJson(github.event.commits.*.message), ' '), '#skip-ci') && !contains(join(toJson(github.event.commits.*.message), ' '), '#skip-deploy') }}
    runs-on: ubuntu-22.04
    steps:
      - name: Discord Webhook Notify (Success)
        uses: Ilshidur/action-discord@master
        if: ${{ env.DEPLOY_CONDITION == 'true' && success() && !contains(needs.*.result, 'failure') }}
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        with:
          args: 'Bloglist has been deployed! üöÄ'
      - name: Discord Webhook Notify (Success)
        uses: Ilshidur/action-discord@master
        if: ${{ env.DEPLOY_CONDITION == 'true' && (failure() || contains(needs.*.result, 'failure')) }}
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        with:
          args: 'Bloglist Deployment Failed! ‚ùå'